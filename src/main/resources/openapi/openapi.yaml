openapi: 3.0.0
info:
  title: Apollo Service API
  description: Apollo Service API definition
  version: 1.0.0
paths:
  /post:
    post:
      summary: Add new post
      description: Add new post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request - either null or blank title/body or non-existing user id
        '500':
          description: Internal server error
  /post/{id}:
    get:
      summary: Get post by id
      description: Get post by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of post to show
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        404:
          description: Post with specified id not found
        '500':
          description: Internal server error
    delete:
      summary: Delete post by id
      description: Delete post by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of post to show
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
        404:
          description: Post with specified id not found
        '500':
          description: Internal server error
    put:
      summary: Update post
      description: Update post
      parameters:
        - name: id
          in: path
          required: true
          description: id the user to look for posts
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request - missing attributes, non-existing post
        '500':
          description: Internal server error
  /post/user/{id}:
    get:
      summary: Get all posts by user id
      description: Get all posts by user id
      parameters:
        - name: id
          in: path
          required: true
          description: id the user to look for posts
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        404:
          description: User with specified id not found
        '500':
          description: Internal server error
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        userId:
          type: integer
          format: int64
          example: 3
        title:
          type: string
          example: Example post title
        body:
          type: string
          example: Example post body
    PostUpdate:
      type: object
      properties:
        title:
          type: string
          example: Example post title
        body:
          type: string
          example: Example post body
    PostList:
      type: array
      items:
        $ref: '#/components/schemas/Post'
